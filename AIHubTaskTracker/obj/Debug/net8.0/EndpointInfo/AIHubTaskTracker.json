{
  "openapi": "3.0.1",
  "info": {
    "title": "AIHub Task Tracker API",
    "version": "v1"
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "AIHubTaskTracker"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Logs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              }
            }
          }
        }
      }
    },
    "/logs/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Log"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Logs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members": {
      "get": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Members"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MemberCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/{id}": {
      "get": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MemberUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MemberUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "TaskItem"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "TaskItem"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItem"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "TaskItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItem"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItem"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskItem"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaskItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "TaskItem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Log": {
        "required": [
          "content",
          "log_type",
          "severity",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "log_id": {
            "type": "integer",
            "format": "int32"
          },
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "task_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "log_type": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "severity": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LogCreateDto": {
        "required": [
          "content",
          "log_type",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "task_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "log_type": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "severity": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogUpdateDto": {
        "type": "object",
        "properties": {
          "log_type": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Member": {
        "required": [
          "email",
          "full_name",
          "password_hash",
          "position",
          "role"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32"
          },
          "full_name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password_hash": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          },
          "position": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MemberCreateDto": {
        "required": [
          "email",
          "full_name",
          "password",
          "position",
          "role"
        ],
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 6,
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          },
          "position": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MemberUpdateDto": {
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "password": {
            "minLength": 6,
            "type": "string",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/RoleType"
          },
          "position": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Report": {
        "required": [
          "report_date",
          "reporter_id"
        ],
        "type": "object",
        "properties": {
          "report_id": {
            "type": "integer",
            "format": "int32"
          },
          "reporter_id": {
            "type": "integer",
            "format": "int32"
          },
          "report_date": {
            "type": "string",
            "format": "date-time"
          },
          "total_requests": {
            "type": "integer",
            "format": "int32"
          },
          "failed_requests": {
            "type": "integer",
            "format": "int32"
          },
          "kpi_crud_auth_perc": {
            "type": "integer",
            "format": "int32"
          },
          "report_status": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "report_summary": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReportCreateDto": {
        "required": [
          "reporter_id"
        ],
        "type": "object",
        "properties": {
          "reporter_id": {
            "type": "integer",
            "format": "int32"
          },
          "report_date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total_requests": {
            "type": "integer",
            "format": "int32"
          },
          "failed_requests": {
            "type": "integer",
            "format": "int32"
          },
          "kpi_crud_auth_perc": {
            "type": "integer",
            "format": "int32"
          },
          "report_status": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "report_summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportUpdateDto": {
        "type": "object",
        "properties": {
          "total_requests": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "failed_requests": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "kpi_crud_auth_perc": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "report_status": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "report_summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleType": {
        "enum": [
          "Backend_Developer",
          "Lead_Developer",
          "Founder"
        ],
        "type": "string"
      },
      "TaskCreateDto": {
        "required": [
          "assignee_id",
          "assigner_id",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "assigner_id": {
            "type": "integer",
            "format": "int32"
          },
          "assignee_id": {
            "type": "integer",
            "format": "int32"
          },
          "collaborators": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "expected_output": {
            "type": "string",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "progress_percentage": {
            "type": "integer",
            "format": "int32"
          },
          "notion_link": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskItem": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "task_id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "assigner_id": {
            "type": "integer",
            "format": "int32"
          },
          "assignee_id": {
            "type": "integer",
            "format": "int32"
          },
          "collaborators": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "expected_output": {
            "type": "string",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "progress_percentage": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "notion_link": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskUpdateDto": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "assigner_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "assignee_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "collaborators": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "expected_output": {
            "type": "string",
            "nullable": true
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "progress_percentage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notion_link": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}