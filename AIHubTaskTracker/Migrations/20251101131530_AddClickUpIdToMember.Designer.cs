// <auto-generated />
using System;
using System.Collections.Generic;
using AIHubTaskTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AIHubTaskTracker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251101131530_AddClickUpIdToMember")]
    partial class AddClickUpIdToMember
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AIHubTaskTracker.Models.BlacklistedTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BlacklistedTokens");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.Log", b =>
                {
                    b.Property<int>("log_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("log_id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("log_type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("severity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("task_id")
                        .HasColumnType("integer");

                    b.Property<int>("user_id")
                        .HasColumnType("integer");

                    b.HasKey("log_id");

                    b.HasIndex("task_id");

                    b.HasIndex("user_id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.Member", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("avatar_url")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("position")
                        .HasMaxLength(100)
                        .HasColumnType("integer");

                    b.Property<int>("role")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("user_id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.Report", b =>
                {
                    b.Property<int>("report_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("report_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("failed_requests")
                        .HasColumnType("integer");

                    b.Property<int>("kpi_crud_auth_perc")
                        .HasColumnType("integer");

                    b.Property<DateTime>("report_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("report_status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("report_summary")
                        .HasColumnType("text");

                    b.Property<int>("reporter_id")
                        .HasColumnType("integer");

                    b.Property<int>("total_requests")
                        .HasColumnType("integer");

                    b.HasKey("report_id");

                    b.HasIndex("reporter_id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.TaskItem", b =>
                {
                    b.Property<int>("task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("task_id"));

                    b.Property<int>("assignee_id")
                        .HasColumnType("integer");

                    b.Property<int>("assigner_id")
                        .HasColumnType("integer");

                    b.Property<string>("clickup_id")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<int>>("collaborators")
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("deadline")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<string>("expected_output")
                        .HasColumnType("text");

                    b.Property<string>("notion_link")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("progress_percentage")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("task_id");

                    b.HasIndex("assignee_id");

                    b.HasIndex("assigner_id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.Log", b =>
                {
                    b.HasOne("AIHubTaskTracker.Models.TaskItem", "task")
                        .WithMany("logs")
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AIHubTaskTracker.Models.Member", "user")
                        .WithMany("logs")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("task");

                    b.Navigation("user");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.Report", b =>
                {
                    b.HasOne("AIHubTaskTracker.Models.Member", "reporter")
                        .WithMany("reports")
                        .HasForeignKey("reporter_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("reporter");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.TaskItem", b =>
                {
                    b.HasOne("AIHubTaskTracker.Models.Member", "assignee")
                        .WithMany("assigned_tasks")
                        .HasForeignKey("assignee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AIHubTaskTracker.Models.Member", "assigner")
                        .WithMany("created_tasks")
                        .HasForeignKey("assigner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assignee");

                    b.Navigation("assigner");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.Member", b =>
                {
                    b.Navigation("assigned_tasks");

                    b.Navigation("created_tasks");

                    b.Navigation("logs");

                    b.Navigation("reports");
                });

            modelBuilder.Entity("AIHubTaskTracker.Models.TaskItem", b =>
                {
                    b.Navigation("logs");
                });
#pragma warning restore 612, 618
        }
    }
}
